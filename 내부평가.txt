부하 테스트 기본 공식
동시 이용자 수: TPS * 호출간격 (응답시간 + 대기시간)
액티브 이용자: TPS * 응답시간

결합의 판단 기준
1. 기능 명세서에 가능하다고 명시된 동작을 수행하는 경우
2. 기능 명세서에 불가능하다고 명시된 동작을 수행하는 경우
3. 기능 명세서에 명시되지 않은 동작을 수행하는 경우
4. 기능 명세서에 명시되어 있지 않지만 수행해야 하는 동작을 수행하지 않는 경우
5. 테스터의 시각에서 볼 때 문제가 있다고 판단되는 경우

코드 익스펙션을 해야 하는 비즈니스적인 이유
1. 결합을 빨리 찾을수록 수정 비용이 적게 든다.
2. 인스펙션의 데이터를 통해 업무에 집중할 수 있다.
3. 인스펙션을 함으로서 교차 교육을 돕는다.
4. 소프트웨어를 개발하고 유지하는데 적은 비용이 든다.
5. 스케쥴애 긍정적인 효과를 준다.
6. 품질을 향상 시킨다.

결함 조치를 위해 확인해야하는 가이드라인의 종류
1. 환경 결합 가이드 라인을 확인한다.
2. 개발 표준 결함의 가이드 라인을 확인한다.
3. 프로그램의 일관성 결함의 가이드라인을 확인한다.
4. 데이터 결함의 가이드라인을 확인한다.
5. 조건 상태와 연산 결함의 가이드라인을 확인한다.
6. 기능 체크와 예외 처리 결함의 가이드라인을 확인한다.